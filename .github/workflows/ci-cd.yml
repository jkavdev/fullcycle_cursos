name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master
      - 'hotfix/**'
      - 'release/**'
      - 'develop/**'
  # Habilita o gatilho manual através da interface do Github Actions
  workflow_dispatch:

env:
  IMAGE_NAME: jkavdev/fc3-admin-catalogo-de-videos-java  

jobs:
  # # Job para a execução dos testes
  # tests:
  #   name: Tests runner
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: fc3/Projeto prático - Java (Back-end)/fc3-admin-do-catalago
  #   # Configuração de passos do nosso job
  #   steps:
  #     # 1. Check-out do código fonte
  #     - uses: actions/checkout@v3

  #     # 2. Configurar a JDK na máquina
  #     - name: Set up JDK@17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'adopt'

  #     # 3. Executar os testes da aplicação
  #     - name: Run application tests
  #       run: chmod +x gradlew && ./gradlew test

  # Job para buildar a aplicacao
  build:
    name: Build runner
    # needs: tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./fc3/Projeto prático - Java (Back-end)/fc3-admin-do-catalago
    # Configuração de passos do nosso job
    steps:
      # 1. Check-out do código fonte
      - uses: actions/checkout@v3

      # 2. Configurar a JDK na máquina
      - name: Set up JDK@17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      # 3. Valida a existencia do gradle wrapper
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.6

      # 4. Realizar o build para gerar o artefato final
      - name: Build da aplicacao
        uses: gradle/gradle-build-action@v2

      - name: Build da aplicacao
        run: chmod +x gradlew && ./gradlew clean build -x test

      # 5. Definir a variavel branch name
      - name: Set BUILD_TAG
        run: |
          echo BUILD_TAG=$(echo ${{ github.head_ref || github.ref_name }} | sed "s,/,_,g")-${{ github.run_number }} >> $GITHUB_ENV

      # 6. Print BUILD_TAG
      - name: Print BUILD_TAG defined
        run: |
          echo "Branch     ---> ${{ github.head_ref || github.ref_name }}"
          echo "Run number ---> ${{ github.run_number }}"
          echo "Tag        ---> ${{ env.BUILD_TAG }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 7. Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PWD }}

      # 8. Build & Deploy da imagem
      - name: Build & push da imagem do docker
        uses: docker/build-push-action@v4
        with:
          file: ./fc3/Projeto prático - Java (Back-end)/fc3-admin-do-catalago/Dockerfile
          context: .
          push: true
          build-args: VERSION=${{ env.BUILD_TAG }}
          tags: ${{ env.IMAGE_NAME }}:${{ env.BUILD_TAG }}