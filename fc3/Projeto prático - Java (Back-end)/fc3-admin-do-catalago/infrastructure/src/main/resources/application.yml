amqp:
  admin:
    auto-create: false
  queues:
    video-created:
      exchange: video.events
      routing-key: video.created
      queue: video.created.queue
    video-encoded:
      exchange: video.events
      routing-key: video.encoded
      queue: video.encoded.queue

google:
  cloud:
    credentials: ${GOOGLE_CLOUD_CREDENTIALS}
    project-id: ${GOOGLE_CLOUD_PROJECT_ID}
    storage:
      catalogo-videos:
        bucket: jkavdev_fc3_catalogo_videos
        connect-timeout: 1000
        read-timeout: 2000
        retry-delay: 50
        retry-max-attempts: 2
        retry-max-delay: 50
        retry-multiplier: 1.0


logging:
  level:
    ROOT: INFO
    br.com.jkavdev.fullcycle.admin.catalogo: DEBUG

server:
  port: 8080
  servlet:
    context-path: /api
# comprimir todas as respostas nos requisitos abaixo
  compression:
    enabled: true # Whether response compression is enabled.
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json # Comma-separated list of MIME types that should be compressed.
    min-response-size: 1024 # Minimum "Content-Length" value that is required for compression to be performed.
# configurando as quantidades de threads do servidor
  undertow:
    threads:
      worker: 64 # Generally this should be reasonably high, at least 10 per CPU core: https://undertow.io/undertow-docs/undertow-docs-2.1.0/index.html#listeners-2
      io: 4 # One IO thread per CPU core is a reasonable default: https://undertow.io/undertow-docs/undertow-docs-2.1.0/index.html#listeners-2

spring:
  datasource:
    url: jdbc:mysql://${mysql.url}/${mysql.schema}?useSSL=true&serverTimezone=UTC&characterEncoding=UTF-8
    username: ${mysql.username}
    password: ${mysql.password}
#  propriedades explicadas no video abaixo
#  https://plataforma.fullcycle.com.br/courses/184/168/174/conteudos?capitulo=174&conteudo=8414
    hikari:
      auto-commit: false
      connection-timeout: 250 # É uma configuração em milliseconds. O ideal é manter baixo para que estoure timeout logo e não prenda as threads.
      max-lifetime: 600000 # Tempo máximo que uma conexão pode ficar aberta (10 min) - security.
      maximum-pool-size: 20 # Mantemos até no máx 20 conexões com o banco de dados. O ideal é manter baixo mesmo, pois é algo custoso para o banco gerenciar. https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
      minimum-idle: 10
      pool-name: master
  jpa:
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      "[hibernate.dialect]": org.hibernate.dialect.MySQL5InnoDBDialect
      "[hibernate.generate_statistics]": false
      "[hibernate.connection.provider_disables_autocommit]": true
      # Para aumentar a performance ao máximo, desabilitamos o auto-commit e o open-in-view.
      # https://vladmihalcea.com/why-you-should-always-use-hibernate-connection-provider_disables_autocommit-for-resource-local-jpa-transactions/\
  rabbitmq:
    dynamic: ${amqp.admin.auto-create} # de acordo com essa propriedade ira realizar o processo de criacao, ou nao, da estrutura do rabbitmq
    host: ${amqp.host}
    port: ${amqp.port}
    username: ${amqp.username}
    password: ${amqp.password}
  servlet:
    multipart:
      max-file-size: 10GB # definindo o tamanho maximo de um arquivo
      max-request-size: 100GB # definindo o tamanho maximo da requisicao

storage:
  catalogo-videos:
    file-name-pattern: type-{type}
    location-pattern: videoId-{videoId}
