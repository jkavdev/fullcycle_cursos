buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:9.12.0'
    }
}

plugins {
    id 'java'
//    adicionando plugin que fornece facilidades para rodar a aplicacao
    id 'application'
//    plugins do spring e spring boot
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.flywaydb.flyway' version '9.12.0'
}

group 'br.com.jkavdev.fullcycle.admin.catalogo.infrastructure'
version '1.0-SNAPSHOT'

// sobrescrevendo o bootjar para gerar o pacote da aplicacao na raiz do projeto
bootJar {
    archiveName 'application.jar'
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation('io.vavr:vavr:0.10.4')

    implementation 'mysql:mysql-connector-java:8.0.32'

    implementation('org.springdoc:springdoc-openapi-webmvc-core:1.6.8')
    implementation('org.springdoc:springdoc-openapi-ui:1.6.8')

//    utilizando o servidor undertow, por se mostrar mais performatico que o tomcat
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

    implementation 'com.fasterxml.jackson.module:jackson-module-afterburner'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation('org.flywaydb:flyway-core')

    testRuntimeOnly('com.h2database:h2')
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'
}

test {
    useJUnitPlatform()
}